{"version":3,"file":"static/webpack/static/development/pages/planets.js.c2546f4b702ed3dd1d07.hot-update.js","sources":["webpack:///./components/planet/planetsInfo/planetsInfo.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport NoSSR from '@mpth/react-no-ssr';\nimport { StyledDetails, StyledDetailsImg, StyledDetailsList, StyledDetailsListItem, StyledName } from '../../people/peopleInfo/peopleInfo.styled';\nimport ErrorMessage from \"../../errorMessage/errorMessage\";\nimport Spinner from '../../spinner/spinner';\n\n\n\n\nconst PlanetsInfo = ({ selectedPlanet, isFetchingPlanet }) => {\n  const [broken, setBroken] = useState(false)\n\n  const serverImage =\n            <StyledDetailsImg\n                planet\n                onError={() => setBroken(true)}\n                src={`https://starwars-visualguide.com/assets/img/planets/${selectedPlanet.id}.jpg`}/>;\n        const brokenImg = broken ? <ErrorMessage /> : serverImage;\n\n  return (\n    // <NoSSR>\n    <>\n      <StyledDetails>\n        {isFetchingPlanet ? <Spinner /> :\n          <>\n            <StyledName>{selectedPlanet.name}</StyledName>\n            {brokenImg}\n            <StyledDetailsList>\n              <StyledDetailsListItem>Population:{selectedPlanet.population}</StyledDetailsListItem>\n              <StyledDetailsListItem>Period: {selectedPlanet.rotation_period}</StyledDetailsListItem>\n              <StyledDetailsListItem>Orbital Period: {selectedPlanet.orbital_period}</StyledDetailsListItem>\n              <StyledDetailsListItem>Diameter: {selectedPlanet.diameter}</StyledDetailsListItem>\n              <StyledDetailsListItem>Climate: {selectedPlanet.climate}</StyledDetailsListItem>\n              <StyledDetailsListItem>Gravity: {selectedPlanet.gravity}</StyledDetailsListItem>\n            </StyledDetailsList>\n            \n          </>\n        }\n      </StyledDetails>\n\n    </>\n  )\n}\nconst mapStateToProps = (state) => {\n  return {\n    selectedPlanet: state.selectedPlanet,\n    isFetchingPlanet: state.isFetchingPlanet\n  }\n}\n\n\n\nexport default connect(mapStateToProps, {})(PlanetsInfo);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdA;AAuBA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAGA;;;;A","sourceRoot":""}